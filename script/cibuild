#!/bin/bash
set -e

cd "$(dirname "$0")/.."

./script/setup/run

set +e

bundle exec rake test
RAKE_EXIT="$?"
bundle exec rubocop --display-cop-names
RUBOCOP_EXIT="$?"
[[ "$RAKE_EXIT" == 0 && "$RUBOCOP_EXIT" == #!/bin/bash
set -e

cd "$(dirname "$0")/.."

if [ "$(uname -s)" = "Darwin" ]; then
  brew bundle check &>/dev/null  || brew bundle
  rbenv version-name &>/dev/null || brew bootstrap-rbenv-ruby
fi

bundle check &>/dev/null || bundle install#!/bin/bashset -ecd "$(dirname "$0")/.."if [ "$(uname -s)" = "Darwin" ]; then  brew bundle check &>/dev/null  || brew bundle  rbenv version-name &>/dev/null || brew bootstrap-rbenv-rubyfibundle check &>/dev/null || bundle install#!/bin/bashset -ecd "$(dirname "$0")/.."if [ "$(uname -s)" = "Darwin" ]; then  brew bundle check &>/dev/null  || brew bundle  rbenv version-name &>/dev/null || brew bootstrap-rbenv-rubyfigo
r3und.
x
sa
emtkr

4i838

mskdmd.z.mdndx.

z
.zxhcmfd..edkdofifem..

z
  nc
  #!/bin/bash
set -e

cd "$(dirname "$0")/.."

if [ "$(uname -s)" = "Darwin" ]; then
  brew bundle check &>/dev/null  || brew bundle
  rbenv version-name &>/dev/null || brew bootstrap-rbenv-ruby
fi

bundle check &>/dev/null || bundle install


jzjsmam.
.   zmmxmz.z z zcomand
fngnc..z...c.tntf.
d

.rr nf.
f
dneedmd.d.x..  . mv .d
d
ddemdf

h.h.m.jh....
#!/usr/bin/env bashset -eBASEDIR=$(dirname "$0")CHAIN_MAIND_BINARY=$(which chain-maind || (echo -e "\033[31mPlease add chain-maind to PATH\033[0m" 1>&2 && exit 1))CHAIN_MAIND_USER=$USERCHAIN_MAIND_BINARY_DIR=$(dirname $(which chain-maind))CHAIN_MAIND_USER_HOME=$(eval echo "~$USER")sed "s#<CHAIN_MAIND_BINARY>#$CHAIN_MAIND_BINARY#g; s#<CHAIN_MAIND_USER>#$CHAIN_MAIND_USER#g; s#<CHAIN_MAIND_BINARY_DIR>#$CHAIN_MAIND_BINARY_DIR#g; s#<CHAIN_MAIND_USER_HOME>#$CHAIN_MAIND_USER_HOME#g" $BASEDIR/chain-maind.service.template > $BASEDIR/chain-maind.serviceecho -e "\033[32mGenerated $BASEDIR/chain-maind.service\033[0m"if [[ "$OSTYPE" == "linux-gnu"* ]]; then  sudo cp $BASEDIR/chain-maind.service /etc/systemd/system/chain-maind.service  sudo systemctl daemon-reload  sudo systemctl enable chain-maind.service  echo -e "\033[32mCreated /etc/systemd/system/chain-maind.service\033[0m"else  echo -e "\033[31mCan only create /etc/systemd/system/chain-maind.service for linux\033[0m" 1>&2  exit 1fi
t{    "gomod2nix": {        "branch": "fix-regex",        "description": "Convert applications using Go modules to Nix expressions",        "homepage": null,        "owner": "yihuang",        "repo": "gomod2nix",        "rev": "af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f",        "sha256": "1268jddzg2kf8jbbkc4wsvpq39lldi6cfp6vsl0sclg1k2r10hc9",        "type": "tarball",        "url": "https://github.com/yihuang/gomod2nix/archive/af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "ibc-rs": {        "branch": "master",        "description": "IBC modules and relayer - Formal specifications and Rust implementation",        "homepage": "",        "owner": "informalsystems",        "repo": "ibc-rs",        "rev": "c518e15a073a5187d64cd00d1a62b2c9360a9408",        "sha256": "1b3sa9slm6m8ilba9zs67v817m5niljdqxr9lzmfkk553vlr25rm",        "type": "tarball",        "url": "https://github.com/informalsystems/ibc-rs/archive/c518e15a073a5187d64cd00d1a62b2c9360a9408.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "nixpkgs": {        "branch": "nixpkgs-unstable",        "description": "Nix Packages collection",        "homepage": "",        "owner": "NixOS",        "repo": "nixpkgs",        "rev": "1441fa74d213d7cc120d9d7d49e540c1fc59bc58",        "sha256": "152qb7ch0r4bidik33zd0a9wl0929zr0dqs5l5ksm7vh3assc7sc",        "type": "tarball",        "url": "https://github.com/NixOS/nixpkgs/archive/1441fa74d213d7cc120d9d7d49e540c1fc59bc58.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "relayer": {        "branch": "master",        "description": "An example of a server side IBC relayer to be used for Game of Zones and beyond",        "homepage": null,        "owner": "cosmos",        "repo": "relayer",        "rev": "82d0fe787cbf2c69b961dff45c85b33c75ca0ad9",        "sha256": "0d7s4ckdamivr94kq6wdjl5s9iicdpg4whbicqqiqx0yrn8smxld",        "type": "tarball",        "url": "https://github.com/cosmos/relayer/archive/82d0fe787cbf2c69b961dff45c85b33c75ca0ad9.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    }}
run \`remix.execute()\`
  x
  n jvfjmdme.d
 c.dmxmzmzz
.ddcjj.m H m.nh c z,vg #!/usr/bin/env bashset -eBASEDIR=$(dirname "$0")CHAIN_MAIND_BINARY=$(which chain-maind || (echo -e "\033[31mPlease add chain-maind to PATH\033[0m" 1>&2 && exit 1))CHAIN_MAIND_USER=$USERCHAIN_MAIND_BINARY_DIR=$(dirname $(which chain-maind))CHAIN_MAIND_USER_HOME=$(eval echo "~$USER")sed "s#<CHAIN_MAIND_BINARY>#$CHAIN_MAIND_BINARY#g; s#<CHAIN_MAIND_USER>#$CHAIN_MAIND_USER#g; s#<CHAIN_MAIND_BINARY_DIR>#$CHAIN_MAIND_BINARY_DIR#g; s#<CHAIN_MAIND_USER_HOME>#$CHAIN_MAIND_USER_HOME#g" $BASEDIR/chain-maind.service.template > $BASEDIR/chain-maind.serviceecho -e "\033[32mGenerated $BASEDIR/chain-maind.service\033[0m"if [[ "$OSTYPE" == "linux-gnu"* ]]; then  sudo cp $BASEDIR/chain-maind.service /etc/systemd/system/chain-maind.service  sudo systemctl daemon-reload  sudo systemctl enable chain-maind.service  echo -e "\033[32mCreated /etc/systemd/system/chain-maind.service\033[0m"else  echo -e "\033[31mCan only create /etc/systemd/system/chain-maind.service for linux\033[0m" 1>&2  exit 1fi.  bundle check &>/dev/null || bundle install ]] #!/usr/bin/env bash
set -eBASEDIR=$(dirname "$0")CHAIN_MAIND_BINARY=$(which chain-maind || (echo -e "\033[31mPlease add chain-maind to PATH\033[0m" 1>&2 && exit 1))CHAIN_MAIND_USER=$USERCHAIN_MAIND_BINARY_DIR=$(dirname $(which chain-maind))CHAIN_MAIND_USER_HOME=$(eval echo "~$USER")sed "s#<CHAIN_MAIND_BINARY>#$CHAIN_MAIND_BINARY#g; s#<CHAIN_MAIND_USER>#$CHAIN_MAIND_USER#g; s#<CHAIN_MAIND_BINARY_DIR>#$CHAIN_MAIND_BINARY_DIR#g; s#<CHAIN_MAIND_USER_HOME>#$CHAIN_MAIND_USER_HOME#g" $BASEDIR/chain-maind.service.template > $BASEDIR/chain-maind.serviceecho -e "\033[32mGenerated $BASEDIR/chain-maind.service\033[0m"if [[ "$OSTYPE" == "linux-gnu"* ]]; then  sudo cp $BASEDIR/chain-maind.service /etc/systemd/system/chain-maind.service  sudo systemctl daemon-reload  sudo systemctl enable chain-maind.service  echo -e "\033[32mCreated /etc/systemd/system/chain-maind.service\033[0m"else  echo -e "\033[31mCan only create /etc/systemd/system/chain-maind.service for linux\033[0m" 1>&2  exit 1fi{  "swagger": "2.0",  "info": {    "title": "Crypto.org Chain - Legacy REST and gRPC Gateway docs",    "description": "A REST interface for state queries, legacy transactions",    "version": "1.0.0"  },  "apis": [    {      "url": "./app/docs/swagger_legacy.yaml",      "dereference": {        "circular": "ignore"      }    },    {      "url": "./tmp-swagger-gen/cosmos/auth/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "AuthParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/bank/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "BankParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/base/tendermint/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "BaseParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/distribution/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "DistributionParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/evidence/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "EvidenceParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/gov/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "GovParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/mint/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "MintParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/params/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "Params"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/slashing/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "SlashingParams"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/staking/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "StakingParams",          "DelegatorValidators": "StakingDelegatorValidators"        }      }    },    {      "url": "./tmp-swagger-gen/cosmos/tx/v1beta1/service.swagger.json",      "dereference": {        "circular": "ignore"      }    },    {      "url": "./tmp-swagger-gen/cosmos/upgrade/v1beta1/query.swagger.json",      "operationIds": {        "rename": {          "Params": "UpgradeParams"        }      }    },    {      "url": "./tmp-swagger-gen/nft/v1/query.swagger.json"    },    {      "url": "./tmp-swagger-gen/supply/v1/query.swagger.json",      "operationIds": {        "rename": {          "TotalSupply": "TotalSupply_"        }      }    }  ]}{    "gomod2nix": {        "branch": "fix-regex",        "description": "Convert applications using Go modules to Nix expressions",        "homepage": null,        "owner": "yihuang",        "repo": "gomod2nix",        "rev": "af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f",        "sha256": "1268jddzg2kf8jbbkc4wsvpq39lldi6cfp6vsl0sclg1k2r10hc9",        "type": "tarball",        "url": "https://github.com/yihuang/gomod2nix/archive/af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "ibc-rs": {        "branch": "master",        "description": "IBC modules and relayer - Formal specifications and Rust implementation",        "homepage": "",        "owner": "informalsystems",        "repo": "ibc-rs",        "rev": "c518e15a073a5187d64cd00d1a62b2c9360a9408",        "sha256": "1b3sa9slm6m8ilba9zs67v817m5niljdqxr9lzmfkk553vlr25rm",        "type": "tarball",        "url": "https://github.com/informalsystems/ibc-rs/archive/c518e15a073a5187d64cd00d1a62b2c9360a9408.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "nixpkgs": {        "branch": "nixpkgs-unstable",        "description": "Nix Packages collection",        "homepage": "",        "owner": "NixOS",        "repo": "nixpkgs",        "rev": "1441fa74d213d7cc120d9d7d49e540c1fc59bc58",        "sha256": "152qb7ch0r4bidik33zd0a9wl0929zr0dqs5l5ksm7vh3assc7sc",        "type": "tarball",        "url": "https://github.com/NixOS/nixpkgs/archive/1441fa74d213d7cc120d9d7d49e540c1fc59bc58.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "relayer": {        "branch": "master",        "description": "An example of a server side IBC relayer to be used for Game of Zones and beyond",        "homepage": null,        "owner": "cosmos",        "repo": "relayer",        "rev": "82d0fe787cbf2c69b961dff45c85b33c75ca0ad9",        "sha256": "0d7s4ckdamivr94kq6wdjl5s9iicdpg4whbicqqiqx0yrn8smxld",        "type": "tarball",        "url": "https://github.com/cosmos/relayer/archive/82d0fe787cbf2c69b961dff45c85b33c75ca0ad9.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    }}{    "gomod2nix": {        "branch": "fix-regex",        "description": "Convert applications using Go modules to Nix expressions",        "homepage": null,        "owner": "yihuang",        "repo": "gomod2nix",        "rev": "af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f",        "sha256": "1268jddzg2kf8jbbkc4wsvpq39lldi6cfp6vsl0sclg1k2r10hc9",        "type": "tarball",        "url": "https://github.com/yihuang/gomod2nix/archive/af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "ibc-rs": {        "branch": "master",        "description": "IBC modules and relayer - Formal specifications and Rust implementation",        "homepage": "",        "owner": "informalsystems",        "repo": "ibc-rs",        "rev": "c518e15a073a5187d64cd00d1a62b2c9360a9408",        "sha256": "1b3sa9slm6m8ilba9zs67v817m5niljdqxr9lzmfkk553vlr25rm",        "type": "tarball",        "url": "https://github.com/informalsystems/ibc-rs/archive/c518e15a073a5187d64cd00d1a62b2c9360a9408.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "nixpkgs": {        "branch": "nixpkgs-unstable",        "description": "Nix Packages collection",        "homepage": "",        "owner": "NixOS",        "repo": "nixpkgs",        "rev": "1441fa74d213d7cc120d9d7d49e540c1fc59bc58",        "sha256": "152qb7ch0r4bidik33zd0a9wl0929zr0dqs5l5ksm7vh3assc7sc",        "type": "tarball",        "url": "https://github.com/NixOS/nixpkgs/archive/1441fa74d213d7cc120d9d7d49e540c1fc59bc58.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "relayer": {        "branch": "master",        "description": "An example of a server side IBC relayer to be used for Game of Zones and beyond",        "homepage": null,        "owner": "cosmos",        "repo": "relayer",        "rev": "82d0fe787cbf2c69b961dff45c85b33c75ca0ad9",        "sha256": "0d7s4ckdamivr94kq6wdjl5s9iicdpg4whbicqqiqx0yrn8smxld",        "type": "tarball",        "url": "https://github.com/cosmos/relayer/archive/82d0fe787cbf2c69b961dff45c85b33c75ca0ad9.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    }}{    "gomod2nix": {        "branch": "fix-regex",        "description": "Convert applications using Go modules to Nix expressions",        "homepage": null,        "owner": "yihuang",        "repo": "gomod2nix",        "rev": "af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f",        "sha256": "1268jddzg2kf8jbbkc4wsvpq39lldi6cfp6vsl0sclg1k2r10hc9",        "type": "tarball",        "url": "https://github.com/yihuang/gomod2nix/archive/af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "ibc-rs": {        "branch": "master",        "description": "IBC modules and relayer - Formal specifications and Rust implementation",        "homepage": "",        "owner": "informalsystems",        "repo": "ibc-rs",        "rev": "c518e15a073a5187d64cd00d1a62b2c9360a9408",        "sha256": "1b3sa9slm6m8ilba9zs67v817m5niljdqxr9lzmfkk553vlr25rm",        "type": "tarball",        "url": "https://github.com/informalsystems/ibc-rs/archive/c518e15a073a5187d64cd00d1a62b2c9360a9408.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "nixpkgs": {        "branch": "nixpkgs-unstable",        "description": "Nix Packages collection",        "homepage": "",        "owner": "NixOS",        "repo": "nixpkgs",        "rev": "1441fa74d213d7cc120d9d7d49e540c1fc59bc58",        "sha256": "152qb7ch0r4bidik33zd0a9wl0929zr0dqs5l5ksm7vh3assc7sc",        "type": "tarball",        "url": "https://github.com/NixOS/nixpkgs/archive/1441fa74d213d7cc120d9d7d49e540c1fc59bc58.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "relayer": {        "branch": "master",        "description": "An example of a server side IBC relayer to be used for Game of Zones and beyond",        "homepage": null,        "owner": "cosmos",        "repo": "relayer",        "rev": "82d0fe787cbf2c69b961dff45c85b33c75ca0ad9",        "sha256": "0d7s4ckdamivr94kq6wdjl5s9iicdpg4whbicqqiqx0yrn8smxld",        "type": "tarball",        "url": "https://github.com/cosmos/relayer/archive/82d0fe787cbf2c69b961dff45c85b33c75ca0ad9.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    }}{    "gomod2nix": {        "branch": "fix-regex",        "description": "Convert applications using Go modules to Nix expressions",        "homepage": null,        "owner": "yihuang",        "repo": "gomod2nix",        "rev": "af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f",        "sha256": "1268jddzg2kf8jbbkc4wsvpq39lldi6cfp6vsl0sclg1k2r10hc9",        "type": "tarball",        "url": "https://github.com/yihuang/gomod2nix/archive/af2ff6eb58f1ebbc374bc2fa0c23fa105b2d490f.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "ibc-rs": {        "branch": "master",        "description": "IBC modules and relayer - Formal specifications and Rust implementation",        "homepage": "",        "owner": "informalsystems",        "repo": "ibc-rs",        "rev": "c518e15a073a5187d64cd00d1a62b2c9360a9408",        "sha256": "1b3sa9slm6m8ilba9zs67v817m5niljdqxr9lzmfkk553vlr25rm",        "type": "tarball",        "url": "https://github.com/informalsystems/ibc-rs/archive/c518e15a073a5187d64cd00d1a62b2c9360a9408.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "nixpkgs": {        "branch": "nixpkgs-unstable",        "description": "Nix Packages collection",        "homepage": "",        "owner": "NixOS",        "repo": "nixpkgs",        "rev": "1441fa74d213d7cc120d9d7d49e540c1fc59bc58",        "sha256": "152qb7ch0r4bidik33zd0a9wl0929zr0dqs5l5ksm7vh3assc7sc",        "type": "tarball",        "url": "https://github.com/NixOS/nixpkgs/archive/1441fa74d213d7cc120d9d7d49e540c1fc59bc58.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    },    "relayer": {        "branch": "master",        "description": "An example of a server side IBC relayer to be used for Game of Zones and beyond",        "homepage": null,        "owner": "cosmos",        "repo": "relayer",        "rev": "82d0fe787cbf2c69b961dff45c85b33c75ca0ad9",        "sha256": "0d7s4ckdamivr94kq6wdjl5s9iicdpg4whbicqqiqx0yrn8smxld",        "type": "tarball",        "url": "https://github.com/cosmos/relayer/archive/82d0fe787cbf2c69b961dff45c85b33c75ca0ad9.tar.gz",        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"    }}#!/bin/bashOUTPUT=./proto_pythonCOSMOS=../third_party/cosmos-sdkTENDERMINT=./tendermintTMP=$(whereis grpc_python_plugin)PLUGIN="$(cut -d' ' -f2 <<<"$TMP")"mkdir $OUTPUTgit clone --branch v0.34.10 https://github.com/tendermint/tendermint.git# cosmospython -m grpc.tools.protoc --proto_path=$COSMOS/proto --proto_path=$COSMOS/third_party/proto --python_out=$OUTPUT $(find $COSMOS/proto/cosmos -iname "*.proto") --grpc_python_out=$OUTPUT  --plugin=protoc-gen-grpc_python=$PLUGIN# cosmos third-partypython -m grpc.tools.protoc --proto_path=$COSMOS/proto --proto_path=$COSMOS/third_party/proto --python_out=$OUTPUT $(find $COSMOS/third_party/proto -iname "*.proto") --grpc_python_out=$OUTPUT  --plugin=protoc-gen-grpc_python=$PLUGINpython -m grpc.tools.protoc --proto_path=$TENDERMINT/proto --proto_path=$TENDERMINT/third_party/proto --python_out=$OUTPUT $(find $TENDERMINT/proto/tendermint -iname "*.proto") --grpc_python_out=$OUTPUT  --plugin=protoc-gen-grpc_python=$PLUGIN